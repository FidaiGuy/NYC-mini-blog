---
title: "Project Syntax"
output: html_document
date: "2024-04-22"
---

```{r setup, include=FALSE}
#Package Imports

library(tidyverse)
library(plotly)
library(leaflet)
library(ggpubr)
library(mapview)

#Setting ggPlot themes to Minimal.
theme_set(theme_minimal())
```

```{r, include=FALSE}

#Import NYPD Data into Workspace and a look at the column data types. 
NYPD_shooting_data <- read_csv(here::here("NYPD_Shooting_Incident_Data__Historic__20240422.csv"))
NYPD_shooting_data %>% glimpse()
```

```{r, include=FALSE}
#Converting the Data Occured column to a date and making an additional column for the year occured
NYPD_shooting_data <- NYPD_shooting_data %>%
  mutate(
    OCCUR_DATE = mdy(OCCUR_DATE),
    OCCUR_YEAR = year(OCCUR_DATE)
  )
```

```{r, fig.width=14, fig.height = 11, echo=FALSE}

#Trended visuals of shooting incidents by year and broken out first by borough then race. 
murders_by_borough <- NYPD_shooting_data %>%
  mutate(occur_year = year(OCCUR_DATE)) %>%
  group_by(BORO, occur_year) %>%
  summarize(murders = n()) %>%
  ggplot(aes(occur_year, murders)) +
    geom_line(aes(color = BORO)) +
    scale_x_continuous(breaks = seq(2006, 2024, 1)) +
    labs(
      title = "Shooting Incidents By Borough",
      subtitle = "Note: 2024 is through March 2024.",
      x="year")+
    theme(legend.position = "top")

murders_by_race <- NYPD_shooting_data %>%
  mutate(occur_year = year(OCCUR_DATE)) %>%
  group_by(VIC_RACE, occur_year) %>%
  summarize(murders = n()) %>%
  ggplot(aes(occur_year, murders)) +
    geom_line(aes(color = VIC_RACE)) +
    scale_x_continuous(breaks = seq(2006, 2024, 1)) +
    labs(
      title = "Shooting Incidents By Race",
      subtitle = "Note: 2024 is through March 2024",
      x = "year"
    ) +
    theme(legend.position = "top")

#Combining the plots above into 1 image. 
ggpubr::ggarrange(murders_by_borough, murders_by_race, ncol = 1, widths = c(9,1))
```

```{r, fig.width=10, echo=FALSE}

#Creating the heat map for the hour shooting occurred by Borough in 2020. 
ggplotly(
NYPD_shooting_data %>%
  mutate(OCCUR_HOUR = hour(OCCUR_TIME),) %>%
  dplyr::filter(OCCUR_YEAR >= 2020 & OCCUR_YEAR < 2021) %>%
  group_by(BORO, OCCUR_HOUR) %>%
  summarize(n = n()) %>%
  ggplot(aes(x = OCCUR_HOUR, y = BORO, fill = n))+
    geom_tile() +
    scale_fill_gradient(low = "lightblue", high = "darkblue", na.value = NA) +
    labs(title = "Time of Shooting Incident in NYC in 2020 by Borough",
         x = "Hour Shooting Occured"))
```






```{r, fig.width=10, echo=FALSE}

#Filtering NYPD Data for incidents taht occured only in 2020
NYPD_shooting_data_2021 <- NYPD_shooting_data %>%
  dplyr::filter(OCCUR_YEAR >= 2020 & OCCUR_YEAR < 2021) 

#HTML to create the popups for map visualization. 
popup_view = paste0(
  "<b> Incident Date: </b>",
  NYPD_shooting_data_2021$OCCUR_DATE,
  "<br>",
  "<b>Victim's Age: </b>",
  NYPD_shooting_data_2021$VIC_AGE_GROUP,
  "<br>",
  "<b>Victim's Sex: </b>",
  NYPD_shooting_data_2021$VIC_SEX,
  "<br>",
  "<b>Victim's Race: </b>",
  NYPD_shooting_data_2021$VIC_RACE
)

#Creating the Leaflet map using 2020 NYPD Shooting Data and the popup_view script above. 
NYPD_shooting_data_2021 %>% leaflet() %>%
  addTiles() %>%
  addCircleMarkers(~NYPD_shooting_data_2021$Longitude, 
                   ~NYPD_shooting_data_2021$Latitude,
                    clusterOptions = markerClusterOptions(),
                   color = ~ifelse(STATISTICAL_MURDER_FLAG == TRUE, "red", "blue"),
                   popup = ~popup_view) %>%
  setView(-74.00, 40.71, zoom = 11) %>%
  addLegend("bottomleft",
            colors = c("red", "blue"),
            labels = c("Yes", "No"),
            title = "Shooting resulted in the victim's death")
```


